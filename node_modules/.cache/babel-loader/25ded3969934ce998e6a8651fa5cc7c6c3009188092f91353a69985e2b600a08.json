{"ast":null,"code":"import React,{useState,useEffect}from'react';import Navbar from'./components/Navbar';import Hero from'./components/Hero';import About from'./components/About';import Skills from'./components/Skills';import Projects from'./components/Projects';import Resume from'./components/Resume';import Contact from'./components/Contact';import Footer from'./components/Footer';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[darkMode,setDarkMode]=useState(false);useEffect(()=>{// Check for saved dark mode preference or default to light mode\nconst savedDarkMode=localStorage.getItem('darkMode');if(savedDarkMode!==null){setDarkMode(JSON.parse(savedDarkMode));}else{// Check system preference\nconst prefersDark=window.matchMedia('(prefers-color-scheme: dark)').matches;setDarkMode(prefersDark);}},[]);useEffect(()=>{// Apply dark mode class to document\nif(darkMode){document.documentElement.classList.add('dark');}else{document.documentElement.classList.remove('dark');}// Save preference\nlocalStorage.setItem('darkMode',JSON.stringify(darkMode));},[darkMode]);const toggleDarkMode=()=>{setDarkMode(!darkMode);};return/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen transition-colors duration-300 \".concat(darkMode?'dark bg-secondary-900 text-white':'bg-gray-50 text-gray-900'),children:[/*#__PURE__*/_jsx(Navbar,{darkMode:darkMode,toggleDarkMode:toggleDarkMode}),/*#__PURE__*/_jsxs(\"main\",{children:[/*#__PURE__*/_jsx(Hero,{}),/*#__PURE__*/_jsx(About,{}),/*#__PURE__*/_jsx(Skills,{}),/*#__PURE__*/_jsx(Projects,{}),/*#__PURE__*/_jsx(Resume,{}),/*#__PURE__*/_jsx(Contact,{})]}),/*#__PURE__*/_jsx(Footer,{})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","Navbar","Hero","About","Skills","Projects","Resume","Contact","Footer","jsx","_jsx","jsxs","_jsxs","App","darkMode","setDarkMode","savedDarkMode","localStorage","getItem","JSON","parse","prefersDark","window","matchMedia","matches","document","documentElement","classList","add","remove","setItem","stringify","toggleDarkMode","className","concat","children"],"sources":["/home/abhishek/Desktop/my webpage2/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Navbar from './components/Navbar';\nimport Hero from './components/Hero';\nimport About from './components/About';\nimport Skills from './components/Skills';\nimport Projects from './components/Projects';\nimport Resume from './components/Resume';\nimport Contact from './components/Contact';\nimport Footer from './components/Footer';\n\nfunction App() {\n  const [darkMode, setDarkMode] = useState(false);\n\n  useEffect(() => {\n    // Check for saved dark mode preference or default to light mode\n    const savedDarkMode = localStorage.getItem('darkMode');\n    if (savedDarkMode !== null) {\n      setDarkMode(JSON.parse(savedDarkMode));\n    } else {\n      // Check system preference\n      const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n      setDarkMode(prefersDark);\n    }\n  }, []);\n\n  useEffect(() => {\n    // Apply dark mode class to document\n    if (darkMode) {\n      document.documentElement.classList.add('dark');\n    } else {\n      document.documentElement.classList.remove('dark');\n    }\n    // Save preference\n    localStorage.setItem('darkMode', JSON.stringify(darkMode));\n  }, [darkMode]);\n\n  const toggleDarkMode = () => {\n    setDarkMode(!darkMode);\n  };\n\n  return (\n    <div className={`min-h-screen transition-colors duration-300 ${\n      darkMode ? 'dark bg-secondary-900 text-white' : 'bg-gray-50 text-gray-900'\n    }`}>\n      <Navbar darkMode={darkMode} toggleDarkMode={toggleDarkMode} />\n      \n      <main>\n        <Hero />\n        <About />\n        <Skills />\n        <Projects />\n        <Resume />\n        <Contact />\n      </main>\n      \n      <Footer />\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CACxC,MAAO,CAAAC,IAAI,KAAM,mBAAmB,CACpC,MAAO,CAAAC,KAAK,KAAM,oBAAoB,CACtC,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CACxC,MAAO,CAAAC,QAAQ,KAAM,uBAAuB,CAC5C,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CACxC,MAAO,CAAAC,OAAO,KAAM,sBAAsB,CAC1C,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEzC,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGhB,QAAQ,CAAC,KAAK,CAAC,CAE/CC,SAAS,CAAC,IAAM,CACd;AACA,KAAM,CAAAgB,aAAa,CAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CACtD,GAAIF,aAAa,GAAK,IAAI,CAAE,CAC1BD,WAAW,CAACI,IAAI,CAACC,KAAK,CAACJ,aAAa,CAAC,CAAC,CACxC,CAAC,IAAM,CACL;AACA,KAAM,CAAAK,WAAW,CAAGC,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAACC,OAAO,CAC7ET,WAAW,CAACM,WAAW,CAAC,CAC1B,CACF,CAAC,CAAE,EAAE,CAAC,CAENrB,SAAS,CAAC,IAAM,CACd;AACA,GAAIc,QAAQ,CAAE,CACZW,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC,CAChD,CAAC,IAAM,CACLH,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACE,MAAM,CAAC,MAAM,CAAC,CACnD,CACA;AACAZ,YAAY,CAACa,OAAO,CAAC,UAAU,CAAEX,IAAI,CAACY,SAAS,CAACjB,QAAQ,CAAC,CAAC,CAC5D,CAAC,CAAE,CAACA,QAAQ,CAAC,CAAC,CAEd,KAAM,CAAAkB,cAAc,CAAGA,CAAA,GAAM,CAC3BjB,WAAW,CAAC,CAACD,QAAQ,CAAC,CACxB,CAAC,CAED,mBACEF,KAAA,QAAKqB,SAAS,gDAAAC,MAAA,CACZpB,QAAQ,CAAG,kCAAkC,CAAG,0BAA0B,CACzE,CAAAqB,QAAA,eACDzB,IAAA,CAACT,MAAM,EAACa,QAAQ,CAAEA,QAAS,CAACkB,cAAc,CAAEA,cAAe,CAAE,CAAC,cAE9DpB,KAAA,SAAAuB,QAAA,eACEzB,IAAA,CAACR,IAAI,GAAE,CAAC,cACRQ,IAAA,CAACP,KAAK,GAAE,CAAC,cACTO,IAAA,CAACN,MAAM,GAAE,CAAC,cACVM,IAAA,CAACL,QAAQ,GAAE,CAAC,cACZK,IAAA,CAACJ,MAAM,GAAE,CAAC,cACVI,IAAA,CAACH,OAAO,GAAE,CAAC,EACP,CAAC,cAEPG,IAAA,CAACF,MAAM,GAAE,CAAC,EACP,CAAC,CAEV,CAEA,cAAe,CAAAK,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}